


Using values for n=5000000, 10000000, 20000000

> eqns := {5000000*evalf(ln(5000000))*1.4427*u + 5000000*v + w=2.38,\
>   10000000*evalf(ln(10000000))*1.4427*u+10000000*v+w = 4.84, 20000000*evalf(ln(20000000))*1.4427*u + 20000000*v+w=9.65};

              /              8                            
     eqns := { 4.850716006 10  u + 20000000 v + w = 9.65, 
              \                                           

                     8                            
       2.325357659 10  u + 10000000 v + w = 4.84, 

                     8                         \ 
       1.112678658 10  u + 5000000 v + w = 2.38 }
                                               / 
> solns := solve(eqns);

          /                  -7                                        -8\ 
solns := { v = 7.587884598 10  , w = -0.1899999978, u = -1.099996205 10   }
          \                                                              / 
> f:=x->   -0.1099996205e-7 * x * evalf(ln(x)) *1.4427 + 0.7587884598e-6*x -.1899999978;

                         -8                                       -7  
f := x -> -1.099996205 10   x evalf(ln(x)) 1.4427 + 7.587884598 10   x - 0.1899999978

> f(10000000);
                          4.839999999
> f(5000000);
                          2.380000000
> f(20000000);
                          9.650000003
> f(30000000);
                          14.37696237
> f(100000000);

Now use f(x), with any value of x to predict the runtime for pure mergesort
for x elements.




